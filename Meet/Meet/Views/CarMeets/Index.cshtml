@model IEnumerable<Meet.Models.CarMeet>

@{
    ViewData["Title"] = "Meets";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Meets</h1>

<p>
    <a type="button" class="btn btn-primary" asp-action="Create">Create A New Meet</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MeetName)
            </th>
        
            <th>
                @Html.DisplayNameFor(model => model.Street)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Zip)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MeetTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MeetDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetName)
                </td>
             
                <td>
                    @Html.DisplayFor(modelItem => item.Street)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MeetDate)
                </td>
                <td>
                    <a type="button" asp-action="Details" asp-route-id="@item.MeetId" class="btn btn-primary">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=@Meet.APIKeys.GoogleApiKey&callback=initMap&libraries=&v=weekly"
        defer></script>
<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
    #map {
        height: 400px;
    }

    /* Optional: Makes the sample page fill the window. */
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
    }

    #infowindow-content .title {
        font-weight: bold;
    }

    #infowindow-content {
        display: none;
    }

    #map #infowindow-content {
        display: inline;
    }

    .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
    }

    #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
    }

    .pac-controls {
        display: inline-block;
        padding: 5px 11px;
    }

        .pac-controls label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }

    #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
    }

        #pac-input:focus {
            border-color: #4d90fe;
        }

    #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
    }

    #target {
        width: 345px;
    }
</style>
{ lat: 43.0389, lng: -87.9065 };
<script>
    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        }
        else { x.innerHTML = "Geolocation is not supported by this browser."; }
    }
    function showPosition(position) {
        var latlondata = {position.coords.latitude,position.coords.longitude};
    }
    window.alert(getLocation())
    function initMap() {
    var myLatLng = getLocation()
    const map = new google.maps.Map(document.getElementById("map"), {
        zoom: 11,
        center: myLatLng,
    });
        var meets = @Html.Raw(Json.Serialize(Model));
    if(meets.length != 0)
    {
        for (let i = 0; i < meets.length; i++) {
            var meet = meets[i];
            var Latitude = meet.lat;
            var Longitude = meet.long;
            myLatLng = { lat: Latitude, lng: Longitude }
            new google.maps.Marker({
                position: myLatLng,
                map,
                title: meet.meetName,
            });
        }
    }


    }
</script>
    <body>

        <div id="map"></div>
    </body>
